{"ast":null,"code":"var AWS = require('../core');\nvar inherit = AWS.util.inherit;\n\n/**\n * @api private\n */\nAWS.Signers.RequestSigner = inherit({\n  constructor: function RequestSigner(request) {\n    this.request = request;\n  },\n  setServiceClientId: function setServiceClientId(id) {\n    this.serviceClientId = id;\n  },\n  getServiceClientId: function getServiceClientId() {\n    return this.serviceClientId;\n  }\n});\nAWS.Signers.RequestSigner.getVersion = function getVersion(version) {\n  switch (version) {\n    case 'v2':\n      return AWS.Signers.V2;\n    case 'v3':\n      return AWS.Signers.V3;\n    case 's3v4':\n      return AWS.Signers.V4;\n    case 'v4':\n      return AWS.Signers.V4;\n    case 's3':\n      return AWS.Signers.S3;\n    case 'v3https':\n      return AWS.Signers.V3Https;\n    case 'bearer':\n      return AWS.Signers.Bearer;\n  }\n  throw new Error('Unknown signing version ' + version);\n};\nrequire('./v2');\nrequire('./v3');\nrequire('./v3https');\nrequire('./v4');\nrequire('./s3');\nrequire('./presign');\nrequire('./bearer');","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}