{"ast":null,"code":"var escapeAttribute = require('./escape-attribute').escapeAttribute;\n\n/**\n * Represents an XML node.\n * @api private\n */\nfunction XmlNode(name, children) {\n  if (children === void 0) {\n    children = [];\n  }\n  this.name = name;\n  this.children = children;\n  this.attributes = {};\n}\nXmlNode.prototype.addAttribute = function (name, value) {\n  this.attributes[name] = value;\n  return this;\n};\nXmlNode.prototype.addChildNode = function (child) {\n  this.children.push(child);\n  return this;\n};\nXmlNode.prototype.removeAttribute = function (name) {\n  delete this.attributes[name];\n  return this;\n};\nXmlNode.prototype.toString = function () {\n  var hasChildren = Boolean(this.children.length);\n  var xmlText = '<' + this.name;\n  // add attributes\n  var attributes = this.attributes;\n  for (var i = 0, attributeNames = Object.keys(attributes); i < attributeNames.length; i++) {\n    var attributeName = attributeNames[i];\n    var attribute = attributes[attributeName];\n    if (typeof attribute !== 'undefined' && attribute !== null) {\n      xmlText += ' ' + attributeName + '=\\\"' + escapeAttribute('' + attribute) + '\\\"';\n    }\n  }\n  return xmlText += !hasChildren ? '/>' : '>' + this.children.map(function (c) {\n    return c.toString();\n  }).join('') + '</' + this.name + '>';\n};\n\n/**\n * @api private\n */\nmodule.exports = {\n  XmlNode: XmlNode\n};","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}